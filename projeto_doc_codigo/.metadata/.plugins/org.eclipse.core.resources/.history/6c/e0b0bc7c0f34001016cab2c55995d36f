package com.facol.projeto.service.factory.impl;

import java.time.Duration;
import java.time.Instant;

import org.springframework.stereotype.Component;

import com.facol.projeto.dto.PautaRequestDTO;
import com.facol.projeto.dto.PautaResponseDTO;
import com.facol.projeto.enums.StatusPauta;
import com.facol.projeto.enums.StatusVotacao;
import com.facol.projeto.model.Associado;
import com.facol.projeto.model.Pauta;
import com.facol.projeto.model.Votacao;
import com.facol.projeto.service.AssociadoConsultaService;
import com.facol.projeto.service.factory.PautaFactory;

@Component
public class PautaFactoryImplementacao implements PautaFactory {

	

	private final AssociadoConsultaService associadoConsulta;

	public PautaFactoryImplementacao(AssociadoConsultaService associadoConsulta) {
		this.associadoConsulta = associadoConsulta;
	}

	@Override
	public PautaResponseDTO criarPautaResponseDTO(Pauta pauta) {

		return new PautaResponseDTO(pauta, this.associadoConsulta.buscarAssociadoPorIdDTO(pauta.getAssociado().getId_associado()));
	}

	@Override
	public Pauta criarPauta(PautaRequestDTO pautaRequestDTO, Associado associado) {
		if (pautaRequestDTO.getTempoVotacao() == null) {
			return new Pauta(null, Instant.now(), pautaRequestDTO.getDescricao(), pautaRequestDTO.getTitulo(),
					StatusPauta.EM_VOTOCAO, associado, 1);

		} else {
			return new Pauta(null, Instant.now(), pautaRequestDTO.getDescricao(), pautaRequestDTO.getTitulo(),
					StatusPauta.EM_VOTOCAO, associado, pautaRequestDTO.getTempoVotacao());

		}

	}

	@Override
	public Votacao criarVotacao(Pauta pauta) {

		return new Votacao(null, pauta.getDataCricao(), pauta,
				pauta.getDataCricao().plus(Duration.ofMinutes(pauta.getTempoVotacao())), StatusVotacao.EM_ANDAMENTO);

	}

}
