{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nexport const usePost = url => {\n  _s();\n  const [config, setConfig] = useState(null);\n  const [metodo, setMetodo] = useState(null);\n  const [carregamento, setCarregamento] = useState(false);\n  const [erro, setErro] = useState(null);\n  const httpConfig = (dados, metodo) => {\n    setErro(null);\n    setConfig({\n      method: metodo,\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(dados)\n    });\n    setMetodo(metodo);\n  };\n  const limparErro = () => setErro(null);\n  useEffect(() => {\n    const httpRequest = async () => {\n      if (!config) return;\n      setCarregamento(true);\n      try {\n        const requisicao = await fetch(url, config);\n        if (!requisicao.create) {\n          const erroTexto = await requisicao.json();\n          throw {\n            mensagem: erroTexto.mensagem,\n            status: erroTexto.status\n          };\n        }\n      } catch (error) {\n        setErro({\n          mensagem: error.mensagem || \"Erro desconhecido\",\n          status: error.status || 500\n        });\n        return null;\n      } finally {\n        setCarregamento(false);\n      }\n    };\n    httpRequest();\n  }, [config, metodo, url]);\n  return {\n    httpConfig,\n    carregamento,\n    erro,\n    limparErro\n  };\n};\n_s(usePost, \"SSnRwhH3h4wWRYSpL7yn7IXz9gc=\");","map":{"version":3,"names":["useEffect","useState","usePost","url","_s","config","setConfig","metodo","setMetodo","carregamento","setCarregamento","erro","setErro","httpConfig","dados","method","headers","body","JSON","stringify","limparErro","httpRequest","requisicao","fetch","create","erroTexto","json","mensagem","status","error"],"sources":["F:/Program Files/ws-faculdade/frontend/src/hooks/usePost.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nexport const usePost = (url) => {\r\n    const [config, setConfig] = useState(null);\r\n    const [metodo, setMetodo] = useState(null);\r\n    const [carregamento, setCarregamento] = useState(false);\r\n    const [erro, setErro] = useState(null);\r\n\r\n    const httpConfig = (dados, metodo) => {\r\n\r\n        setErro(null);\r\n\r\n        setConfig({\r\n            method: metodo,\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(dados)\r\n        })\r\n        setMetodo(metodo);\r\n    };\r\n     const limparErro = () => setErro(null);\r\n    useEffect(() => {\r\n        const httpRequest = async () => {\r\n            if (!config) return;\r\n            setCarregamento(true);\r\n            try {\r\n             const requisicao = await fetch(url, config);\r\n                if (!requisicao.create) {\r\n                    const erroTexto = await requisicao.json();\r\n                    throw {mensagem: erroTexto.mensagem, status: erroTexto.status};\r\n                }\r\n            } catch (error) {\r\n                setErro({\r\n                    mensagem: error.mensagem || \"Erro desconhecido\",\r\n                    status: error.status || 500\r\n                });\r\n                return null;\r\n            } finally {\r\n                setCarregamento(false);\r\n            }\r\n\r\n        };\r\n        httpRequest();\r\n    }, [config, metodo, url])\r\n    return { httpConfig, carregamento, erro, limparErro }\r\n};"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,OAAO,MAAMC,OAAO,GAAIC,GAAG,IAAK;EAAAC,EAAA;EAC5B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACM,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMY,UAAU,GAAGA,CAACC,KAAK,EAAEP,MAAM,KAAK;IAElCK,OAAO,CAAC,IAAI,CAAC;IAEbN,SAAS,CAAC;MACNS,MAAM,EAAER,MAAM;MACdS,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,KAAK;IAC9B,CAAC,CAAC;IACFN,SAAS,CAACD,MAAM,CAAC;EACrB,CAAC;EACA,MAAMa,UAAU,GAAGA,CAAA,KAAMR,OAAO,CAAC,IAAI,CAAC;EACvCZ,SAAS,CAAC,MAAM;IACZ,MAAMqB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI,CAAChB,MAAM,EAAE;MACbK,eAAe,CAAC,IAAI,CAAC;MACrB,IAAI;QACH,MAAMY,UAAU,GAAG,MAAMC,KAAK,CAACpB,GAAG,EAAEE,MAAM,CAAC;QACxC,IAAI,CAACiB,UAAU,CAACE,MAAM,EAAE;UACpB,MAAMC,SAAS,GAAG,MAAMH,UAAU,CAACI,IAAI,CAAC,CAAC;UACzC,MAAM;YAACC,QAAQ,EAAEF,SAAS,CAACE,QAAQ;YAAEC,MAAM,EAAEH,SAAS,CAACG;UAAM,CAAC;QAClE;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZjB,OAAO,CAAC;UACJe,QAAQ,EAAEE,KAAK,CAACF,QAAQ,IAAI,mBAAmB;UAC/CC,MAAM,EAAEC,KAAK,CAACD,MAAM,IAAI;QAC5B,CAAC,CAAC;QACF,OAAO,IAAI;MACf,CAAC,SAAS;QACNlB,eAAe,CAAC,KAAK,CAAC;MAC1B;IAEJ,CAAC;IACDW,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,CAAChB,MAAM,EAAEE,MAAM,EAAEJ,GAAG,CAAC,CAAC;EACzB,OAAO;IAAEU,UAAU;IAAEJ,YAAY;IAAEE,IAAI;IAAES;EAAW,CAAC;AACzD,CAAC;AAAChB,EAAA,CA5CWF,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}