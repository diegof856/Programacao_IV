{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nexport const usePut = () => {\n  _s();\n  const [config, setConfig] = useState(null);\n  const [carregamento, setCarregamento] = useState(false);\n  const [erro, setErro] = useState(null);\n  const httpPutConfig = (dados, idPauta) => {\n    setErro(\"\");\n    setConfig({\n      url: `http://localhost:8080/v1/pautas/${idPauta}`,\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(dados)\n    });\n  };\n  const limparErro = () => setErro(\"\");\n  useEffect(() => {\n    const httpRequest = async () => {\n      if (!config) return;\n      setCarregamento(true);\n      console.log(url);\n      try {\n        const requisicao = await fetch(url, config);\n        if (!requisicao.ok) {\n          let erroRequisicao = await requisicao.json();\n          throw {\n            mensagem: erroRequisicao.mensagem,\n            status: erroRequisicao.status\n          };\n        }\n      } catch (error) {\n        setErro({\n          mensagem: error.mensagem,\n          status: error.status\n        });\n        return null;\n      } finally {\n        setCarregamento(true);\n      }\n    };\n    httpRequest();\n  }, [config, url]);\n  return {\n    httpPutConfig,\n    carregamento,\n    erro,\n    limparErro\n  };\n};\n_s(usePut, \"UOw0lzZE9wByT8OJvNd5p480ryw=\");","map":{"version":3,"names":["useEffect","useState","usePut","_s","config","setConfig","carregamento","setCarregamento","erro","setErro","httpPutConfig","dados","idPauta","url","method","headers","body","JSON","stringify","limparErro","httpRequest","console","log","requisicao","fetch","ok","erroRequisicao","json","mensagem","status","error"],"sources":["F:/Program Files/ws-faculdade/Programacao_IV/projeto_doc_codigo/frontend/src/hooks/usePut.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nexport const usePut = () => {\r\n    const [config, setConfig] = useState(null);\r\n    \r\n    const [carregamento, setCarregamento] = useState(false);\r\n    const [erro, setErro] = useState(null);\r\n\r\n   const httpPutConfig = (dados, idPauta) =>{\r\n        setErro(\"\");\r\n        setConfig({\r\n            url: `http://localhost:8080/v1/pautas/${idPauta}`,\r\n             method: \"PUT\",\r\n              headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n              body: JSON.stringify(dados)\r\n        })\r\n            \r\n\r\n        \r\n    }\r\n   \r\n    const limparErro = () => setErro(\"\");\r\n    useEffect(()=>{\r\n        const httpRequest = async () =>{\r\n              if (!config) return;\r\n            setCarregamento(true);\r\n             console.log(url)\r\n            try {\r\n                const requisicao = await fetch(url, config);\r\n                if(!requisicao.ok){\r\n                    let erroRequisicao = await requisicao.json();\r\n                    throw {mensagem: erroRequisicao.mensagem, status: erroRequisicao.status}\r\n                }\r\n\r\n            } catch (error) {\r\n                setErro({\r\n                    mensagem:error.mensagem,\r\n                    status:error.status\r\n                });\r\n                 return null\r\n            }\r\n            finally{\r\n                setCarregamento(true);\r\n            }\r\n           \r\n        };\r\n        httpRequest();\r\n    },[config,url])\r\n    return {httpPutConfig, carregamento, erro, limparErro}\r\n\r\n} \r\n\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAM,CAACK,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEvC,MAAMS,aAAa,GAAGA,CAACC,KAAK,EAAEC,OAAO,KAAI;IACpCH,OAAO,CAAC,EAAE,CAAC;IACXJ,SAAS,CAAC;MACNQ,GAAG,EAAE,mCAAmCD,OAAO,EAAE;MAChDE,MAAM,EAAE,KAAK;MACZC,OAAO,EAAE;QACP,cAAc,EAAE;MACpB,CAAC;MACCC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,KAAK;IAChC,CAAC,CAAC;EAIN,CAAC;EAED,MAAMQ,UAAU,GAAGA,CAAA,KAAMV,OAAO,CAAC,EAAE,CAAC;EACpCT,SAAS,CAAC,MAAI;IACV,MAAMoB,WAAW,GAAG,MAAAA,CAAA,KAAW;MACzB,IAAI,CAAChB,MAAM,EAAE;MACfG,eAAe,CAAC,IAAI,CAAC;MACpBc,OAAO,CAACC,GAAG,CAACT,GAAG,CAAC;MACjB,IAAI;QACA,MAAMU,UAAU,GAAG,MAAMC,KAAK,CAACX,GAAG,EAAET,MAAM,CAAC;QAC3C,IAAG,CAACmB,UAAU,CAACE,EAAE,EAAC;UACd,IAAIC,cAAc,GAAG,MAAMH,UAAU,CAACI,IAAI,CAAC,CAAC;UAC5C,MAAM;YAACC,QAAQ,EAAEF,cAAc,CAACE,QAAQ;YAAEC,MAAM,EAAEH,cAAc,CAACG;UAAM,CAAC;QAC5E;MAEJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZrB,OAAO,CAAC;UACJmB,QAAQ,EAACE,KAAK,CAACF,QAAQ;UACvBC,MAAM,EAACC,KAAK,CAACD;QACjB,CAAC,CAAC;QACD,OAAO,IAAI;MAChB,CAAC,SACM;QACHtB,eAAe,CAAC,IAAI,CAAC;MACzB;IAEJ,CAAC;IACDa,WAAW,CAAC,CAAC;EACjB,CAAC,EAAC,CAAChB,MAAM,EAACS,GAAG,CAAC,CAAC;EACf,OAAO;IAACH,aAAa;IAAEJ,YAAY;IAAEE,IAAI;IAAEW;EAAU,CAAC;AAE1D,CAAC;AAAAhB,EAAA,CAlDYD,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}